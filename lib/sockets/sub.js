// Generated by CoffeeScript 1.4.0
(function() {
  var Socket, SubSocket, debug, types, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ref = require('./socket'), Socket = _ref.Socket, types = _ref.types;

  debug = require('debug')('socketmq:sub');

  SubSocket = (function(_super) {

    __extends(SubSocket, _super);

    function SubSocket(context, options) {
      SubSocket.__super__.constructor.call(this, context, 'sub', options);
      this.subscriptions = [];
    }

    SubSocket.prototype.subscribe = function(topic) {
      topic = '^' + topic;
      return this.subscriptions.push(new RegExp(topic));
    };

    SubSocket.prototype.handleMessage = function(conn, data) {
      var _this = this;
      if (this.subscriptions.length > 0) {
        this.subscriptions.some(function(sub) {
          if (sub.test(data)) {
            _this.emit('message', data);
            return true;
          }
        });
      }
      return this;
    };

    return SubSocket;

  })(Socket);

  module.exports = SubSocket;

}).call(this);
